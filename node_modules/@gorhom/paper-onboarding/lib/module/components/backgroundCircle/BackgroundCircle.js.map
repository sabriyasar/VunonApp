{"version":3,"sources":["BackgroundCircle.tsx"],"names":["React","memo","Circle","Animated","interpolate","add","Extrapolate","isEqual","AnimatedCircle","createAnimatedComponent","BackgroundCircleComponent","index","animatedIndex","color","extendedSize","bottomPosition","indicatorSize","animatedIndicatorsContainerPosition","animatedFocus","inputRange","outputRange","extrapolate","CLAMP","animatedRadius","animatedLeftPosition","BackgroundCircle"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AAEA,SAASC,MAAT,QAAoC,kBAApC;AACA,OAAOC,QAAP,IACEC,WADF,EAEEC,GAFF,EAGEC,WAHF,QAIO,yBAJP,C,CAKA;;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAGA,MAAMC,cAAc,GAAGL,QAAQ,CAACM,uBAAT,CACrBP,MADqB,CAAvB;;AAKA,MAAMQ,yBAAyB,GAAG,CAAC;AACjCC,EAAAA,KADiC;AAEjCC,EAAAA,aAFiC;AAGjCC,EAAAA,KAHiC;AAIjCC,EAAAA,YAJiC;AAKjCC,EAAAA,cALiC;AAMjCC,EAAAA,aANiC;AAOjCC,EAAAA;AAPiC,CAAD,KAQL;AAC3B;AACA;AAEA;AACA,QAAMC,aAAa,GAAGd,WAAW,CAACQ,aAAD,EAAgB;AAC/CO,IAAAA,UAAU,EAAE,CAACR,KAAK,GAAG,CAAT,EAAYA,KAAZ,EAAmBA,KAAK,GAAG,CAA3B,CADmC;AAE/CS,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFkC;AAG/CC,IAAAA,WAAW,EAAEf,WAAW,CAACgB;AAHsB,GAAhB,CAAjC;AAKA,QAAMC,cAAc,GAAGnB,WAAW,CAACc,aAAD,EAAgB;AAChDC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoC;AAEhDC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAIN,YAAJ,CAFmC;AAGhDO,IAAAA,WAAW,EAAEf,WAAW,CAACgB;AAHuB,GAAhB,CAAlC;AAKA,QAAME,oBAAoB,GAAGnB,GAAG,CAC9BY,mCAD8B,EAE9BD,aAAa,GAAG,CAFc,EAG9BL,KAAK,GAAGK,aAHsB,CAAhC,CAf2B,CAoB3B;AAEA;;AACA,sBACE,oBAAC,cAAD;AACE,IAAA,CAAC,EAAEO,cADL;AAEE,IAAA,EAAE,EAAER,cAFN;AAGE,IAAA,EAAE,EAAES,oBAHN;AAIE,IAAA,IAAI,EAAEX;AAJR,IADF;AAQD,CAvCD;;AAyCA,MAAMY,gBAAgB,gBAAGxB,IAAI,CAACS,yBAAD,EAA4BH,OAA5B,CAA7B;AAEA,eAAekB,gBAAf","sourcesContent":["import React, { memo } from 'react';\nimport { ViewStyle } from 'react-native';\nimport { Circle, CircleProps } from 'react-native-svg';\nimport Animated, {\n  interpolate,\n  add,\n  Extrapolate,\n} from 'react-native-reanimated';\n// @ts-ignore ðŸ˜ž\nimport isEqual from 'lodash.isequal';\nimport { BackgroundCircleProps } from '../../types';\n\nconst AnimatedCircle = Animated.createAnimatedComponent(\n  Circle\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, CircleProps & { style?: any }>\n>;\nconst BackgroundCircleComponent = ({\n  index,\n  animatedIndex,\n  color,\n  extendedSize,\n  bottomPosition,\n  indicatorSize,\n  animatedIndicatorsContainerPosition,\n}: BackgroundCircleProps) => {\n  //#region variables\n  //#endregion\n\n  //#region animations\n  const animatedFocus = interpolate(animatedIndex, {\n    inputRange: [index - 1, index, index + 1],\n    outputRange: [0, 1, 2],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  const animatedRadius = interpolate(animatedFocus, {\n    inputRange: [0, 1],\n    outputRange: [0, extendedSize],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  const animatedLeftPosition = add(\n    animatedIndicatorsContainerPosition,\n    indicatorSize / 2,\n    index * indicatorSize\n  );\n  //#endregion\n\n  // render\n  return (\n    <AnimatedCircle\n      r={animatedRadius}\n      cy={bottomPosition}\n      cx={animatedLeftPosition}\n      fill={color}\n    />\n  );\n};\n\nconst BackgroundCircle = memo(BackgroundCircleComponent, isEqual);\n\nexport default BackgroundCircle;\n"]}