{"version":3,"sources":["PageContent.tsx"],"names":["React","useMemo","memo","Text","Dimensions","Animated","styles","interpolate","Extrapolate","SCREEN_HEIGHT","get","height","PageContentComponent","animatedFocus","image","title","description","titleStyle","titleStyleOverride","descriptionStyle","descriptionStyleOverride","animatedImageTopPosition","inputRange","outputRange","extrapolate","CLAMP","imageContainerStyle","imageContainer","transform","translateY","PageContent"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,IAAzB,QAAqC,OAArC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,cAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAA+BH,QAArC;AAEA,MAAMI,aAAa,GAAGL,UAAU,CAACM,GAAX,CAAe,QAAf,EAAyBC,MAA/C;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,aAD4B;AAE5BC,EAAAA,KAF4B;AAG5BC,EAAAA,KAH4B;AAI5BC,EAAAA,WAJ4B;AAK5BC,EAAAA,UAAU,EAAEC,kBALgB;AAM5BC,EAAAA,gBAAgB,EAAEC;AANU,CAAD,KAOL;AACtB;AACA,QAAMC,wBAAwB,GAAGd,WAAW,CAACM,aAAD,EAAgB;AAC1DS,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8C;AAE1DC,IAAAA,WAAW,EAAE,CAACd,aAAa,GAAG,CAAjB,EAAoB,CAApB,CAF6C;AAG1De,IAAAA,WAAW,EAAEhB,WAAW,CAACiB;AAHiC,GAAhB,CAA5C,CAFsB,CAOtB;AAEA;;AACA,QAAMR,UAAU,GAAGhB,OAAO,CAAC,MAAM,CAACK,MAAM,CAACS,KAAR,EAAeG,kBAAf,CAAP,EAA2C,CACnEA,kBADmE,CAA3C,CAA1B;AAIA,QAAMC,gBAAgB,GAAGlB,OAAO,CAC9B,MAAM,CAACK,MAAM,CAACU,WAAR,EAAqBI,wBAArB,CADwB,EAE9B,CAACA,wBAAD,CAF8B,CAAhC;AAKA,QAAMM,mBAAwB,GAAGzB,OAAO,CACtC,MAAM,CACJK,MAAM,CAACqB,cADH,EAEJ;AACEC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAER;AAAd,KAAD;AADb,GAFI,CADgC,EAOtC,CAACA,wBAAD,CAPsC,CAAxC,CAnBsB,CA4BtB;;AACA,sBACE,0CACGP,KAAK,iBACJ,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEY;AAAtB,KACG,OAAOZ,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAD3C,CAFJ,eAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG;AAAb,KAA0BF,KAA1B,CANF,eAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI;AAAb,KAAgCH,WAAhC,CAPF,CADF;AAWD,CA/CD;;AAiDA,MAAMc,WAAW,gBAAG5B,IAAI,CAACU,oBAAD,CAAxB;AAEA,eAAekB,WAAf","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { Text, Dimensions } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { PageContentProps } from '../../types';\nimport { styles } from './styles';\n\nconst { interpolate, Extrapolate } = Animated;\n\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\n\nconst PageContentComponent = ({\n  animatedFocus,\n  image,\n  title,\n  description,\n  titleStyle: titleStyleOverride,\n  descriptionStyle: descriptionStyleOverride,\n}: PageContentProps) => {\n  //#region\n  const animatedImageTopPosition = interpolate(animatedFocus, {\n    inputRange: [0, 1],\n    outputRange: [SCREEN_HEIGHT / 8, 0],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  //#endregion\n\n  //#region styles\n  const titleStyle = useMemo(() => [styles.title, titleStyleOverride], [\n    titleStyleOverride,\n  ]);\n\n  const descriptionStyle = useMemo(\n    () => [styles.description, descriptionStyleOverride],\n    [descriptionStyleOverride]\n  );\n\n  const imageContainerStyle: any = useMemo(\n    () => [\n      styles.imageContainer,\n      {\n        transform: [{ translateY: animatedImageTopPosition }],\n      },\n    ],\n    [animatedImageTopPosition]\n  );\n  //#endregion\n  return (\n    <>\n      {image && (\n        <Animated.View style={imageContainerStyle}>\n          {typeof image === 'function' ? image() : image}\n        </Animated.View>\n      )}\n      <Text style={titleStyle}>{title}</Text>\n      <Text style={descriptionStyle}>{description}</Text>\n    </>\n  );\n};\n\nconst PageContent = memo(PageContentComponent);\n\nexport default PageContent;\n"]}