import React, { useMemo, memo } from 'react';
import { Text, Dimensions } from 'react-native';
import Animated from 'react-native-reanimated';
import { styles } from './styles';
const {
  interpolate,
  Extrapolate
} = Animated;
const SCREEN_HEIGHT = Dimensions.get('window').height;

const PageContentComponent = ({
  animatedFocus,
  image,
  title,
  description,
  titleStyle: titleStyleOverride,
  descriptionStyle: descriptionStyleOverride
}) => {
  //#region
  const animatedImageTopPosition = interpolate(animatedFocus, {
    inputRange: [0, 1],
    outputRange: [SCREEN_HEIGHT / 8, 0],
    extrapolate: Extrapolate.CLAMP
  }); //#endregion
  //#region styles

  const titleStyle = useMemo(() => [styles.title, titleStyleOverride], [titleStyleOverride]);
  const descriptionStyle = useMemo(() => [styles.description, descriptionStyleOverride], [descriptionStyleOverride]);
  const imageContainerStyle = useMemo(() => [styles.imageContainer, {
    transform: [{
      translateY: animatedImageTopPosition
    }]
  }], [animatedImageTopPosition]); //#endregion

  return /*#__PURE__*/React.createElement(React.Fragment, null, image && /*#__PURE__*/React.createElement(Animated.View, {
    style: imageContainerStyle
  }, typeof image === 'function' ? image() : image), /*#__PURE__*/React.createElement(Text, {
    style: titleStyle
  }, title), /*#__PURE__*/React.createElement(Text, {
    style: descriptionStyle
  }, description));
};

const PageContent = /*#__PURE__*/memo(PageContentComponent);
export default PageContent;
//# sourceMappingURL=PageContent.js.map