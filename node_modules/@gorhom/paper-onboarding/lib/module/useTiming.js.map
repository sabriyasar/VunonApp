{"version":3,"sources":["useTiming.ts"],"names":["Animated","Easing","sub","State","useClock","useValue","add","or","block","cond","eq","set","stopClock","and","not","clockRunning","startClock","lessThan","greaterThan","interpolate","abs","timing","useTiming","animatedStaticIndex","value","velocity","state","size","screenWidth","clock","config","toValue","duration","easing","out","exp","animationState","finished","position","frameTime","time","valueClamp","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","velocityClamp","isTimingInterrupted","BEGAN","finishTiming","shouldAnimate","shouldReset","shouldAnimateNext","ACTIVE","END"],"mappings":"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","sourcesContent":["import Animated, { Easing, sub } from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport { useClock, useValue } from 'react-native-redash';\n\nconst {\n  add,\n  or,\n  block,\n  cond,\n  eq,\n  set,\n  stopClock,\n  and,\n  not,\n  clockRunning,\n  startClock,\n  lessThan,\n  greaterThan,\n  interpolate,\n  abs,\n  timing,\n} = Animated;\n\ninterface useTimingProps {\n  value: Animated.Adaptable<number>;\n  animatedStaticIndex: Animated.Value<number>;\n  velocity: Animated.Adaptable<number>;\n  state: Animated.Value<State>;\n  offset?: Animated.Value<number>;\n  deceleration?: number;\n  size: number;\n  screenWidth: number;\n}\n\nexport const useTiming = ({\n  animatedStaticIndex,\n  value,\n  velocity,\n  state,\n  size,\n  screenWidth,\n}: useTimingProps) => {\n  const clock = useClock();\n\n  const config = {\n    toValue: useValue(0),\n    duration: 500,\n    easing: Easing.out(Easing.exp),\n  };\n\n  const animationState = {\n    finished: useValue(0),\n    position: useValue(0),\n    frameTime: useValue(0),\n    time: useValue(0),\n  };\n\n  const valueClamp = interpolate(value, {\n    inputRange: [screenWidth * -1, 0, screenWidth],\n    outputRange: [1, 0, -1],\n    extrapolate: Animated.Extrapolate.CLAMP,\n  });\n\n  const velocityClamp = interpolate(velocity, {\n    inputRange: [screenWidth * -2, 0, screenWidth * 2],\n    outputRange: [0.5, 0, -0.5],\n    extrapolate: Animated.Extrapolate.CLAMP,\n  });\n\n  const isTimingInterrupted = and(eq(state, State.BEGAN), clockRunning(clock));\n  const finishTiming = [\n    set(animatedStaticIndex, config.toValue),\n    set(animationState.frameTime, 0),\n    set(animationState.time, 0),\n    stopClock(clock),\n  ];\n\n  const shouldAnimate = and(\n    not(and(eq(animatedStaticIndex, 0), lessThan(valueClamp, 0))),\n    not(and(eq(animatedStaticIndex, size - 1), greaterThan(valueClamp, 0)))\n  );\n  const shouldReset = not(\n    greaterThan(add(abs(valueClamp), abs(velocityClamp)), 0.5)\n  );\n\n  const shouldAnimateNext = greaterThan(\n    add(animationState.position, velocityClamp),\n    animatedStaticIndex\n  );\n\n  return block([\n    cond(isTimingInterrupted, finishTiming),\n    cond(\n      eq(state, State.ACTIVE),\n      cond(\n        and(\n          not(and(eq(animatedStaticIndex, 0), lessThan(valueClamp, 0))),\n          not(\n            and(eq(animatedStaticIndex, size - 1), greaterThan(valueClamp, 0))\n          )\n        ),\n        [\n          set(animationState.finished, 0),\n          set(animationState.position, add(animatedStaticIndex, valueClamp)),\n        ]\n      )\n    ),\n\n    cond(eq(state, State.END), [\n      cond(and(not(clockRunning(clock)), not(animationState.finished)), [\n        cond(\n          or(shouldReset, not(shouldAnimate)),\n          set(config.toValue, animatedStaticIndex),\n          cond(\n            shouldAnimateNext,\n            set(config.toValue, add(animatedStaticIndex, 1)),\n            set(config.toValue, sub(animatedStaticIndex, 1))\n          )\n        ),\n        set(animationState.finished, 0),\n        set(animationState.frameTime, 0),\n        set(animationState.time, 0),\n        startClock(clock),\n      ]),\n      timing(clock, animationState, config),\n      cond(animationState.finished, finishTiming),\n    ]),\n\n    animationState.position,\n  ]);\n};\n"]}