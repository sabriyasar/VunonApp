{"version":3,"sources":["useTiming.ts"],"names":["add","or","block","cond","eq","set","stopClock","and","not","clockRunning","startClock","lessThan","greaterThan","interpolate","abs","timing","Animated","useTiming","animatedStaticIndex","value","velocity","state","size","screenWidth","clock","config","toValue","duration","easing","Easing","out","exp","animationState","finished","position","frameTime","time","valueClamp","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","velocityClamp","isTimingInterrupted","State","BEGAN","finishTiming","shouldAnimate","shouldReset","shouldAnimateNext","ACTIVE","END"],"mappings":"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","sourcesContent":["import Animated, { Easing, sub } from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport { useClock, useValue } from 'react-native-redash';\n\nconst {\n  add,\n  or,\n  block,\n  cond,\n  eq,\n  set,\n  stopClock,\n  and,\n  not,\n  clockRunning,\n  startClock,\n  lessThan,\n  greaterThan,\n  interpolate,\n  abs,\n  timing,\n} = Animated;\n\ninterface useTimingProps {\n  value: Animated.Adaptable<number>;\n  animatedStaticIndex: Animated.Value<number>;\n  velocity: Animated.Adaptable<number>;\n  state: Animated.Value<State>;\n  offset?: Animated.Value<number>;\n  deceleration?: number;\n  size: number;\n  screenWidth: number;\n}\n\nexport const useTiming = ({\n  animatedStaticIndex,\n  value,\n  velocity,\n  state,\n  size,\n  screenWidth,\n}: useTimingProps) => {\n  const clock = useClock();\n\n  const config = {\n    toValue: useValue(0),\n    duration: 500,\n    easing: Easing.out(Easing.exp),\n  };\n\n  const animationState = {\n    finished: useValue(0),\n    position: useValue(0),\n    frameTime: useValue(0),\n    time: useValue(0),\n  };\n\n  const valueClamp = interpolate(value, {\n    inputRange: [screenWidth * -1, 0, screenWidth],\n    outputRange: [1, 0, -1],\n    extrapolate: Animated.Extrapolate.CLAMP,\n  });\n\n  const velocityClamp = interpolate(velocity, {\n    inputRange: [screenWidth * -2, 0, screenWidth * 2],\n    outputRange: [0.5, 0, -0.5],\n    extrapolate: Animated.Extrapolate.CLAMP,\n  });\n\n  const isTimingInterrupted = and(eq(state, State.BEGAN), clockRunning(clock));\n  const finishTiming = [\n    set(animatedStaticIndex, config.toValue),\n    set(animationState.frameTime, 0),\n    set(animationState.time, 0),\n    stopClock(clock),\n  ];\n\n  const shouldAnimate = and(\n    not(and(eq(animatedStaticIndex, 0), lessThan(valueClamp, 0))),\n    not(and(eq(animatedStaticIndex, size - 1), greaterThan(valueClamp, 0)))\n  );\n  const shouldReset = not(\n    greaterThan(add(abs(valueClamp), abs(velocityClamp)), 0.5)\n  );\n\n  const shouldAnimateNext = greaterThan(\n    add(animationState.position, velocityClamp),\n    animatedStaticIndex\n  );\n\n  return block([\n    cond(isTimingInterrupted, finishTiming),\n    cond(\n      eq(state, State.ACTIVE),\n      cond(\n        and(\n          not(and(eq(animatedStaticIndex, 0), lessThan(valueClamp, 0))),\n          not(\n            and(eq(animatedStaticIndex, size - 1), greaterThan(valueClamp, 0))\n          )\n        ),\n        [\n          set(animationState.finished, 0),\n          set(animationState.position, add(animatedStaticIndex, valueClamp)),\n        ]\n      )\n    ),\n\n    cond(eq(state, State.END), [\n      cond(and(not(clockRunning(clock)), not(animationState.finished)), [\n        cond(\n          or(shouldReset, not(shouldAnimate)),\n          set(config.toValue, animatedStaticIndex),\n          cond(\n            shouldAnimateNext,\n            set(config.toValue, add(animatedStaticIndex, 1)),\n            set(config.toValue, sub(animatedStaticIndex, 1))\n          )\n        ),\n        set(animationState.finished, 0),\n        set(animationState.frameTime, 0),\n        set(animationState.time, 0),\n        startClock(clock),\n      ]),\n      timing(clock, animationState, config),\n      cond(animationState.finished, finishTiming),\n    ]),\n\n    animationState.position,\n  ]);\n};\n"]}