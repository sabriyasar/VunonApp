{"version":3,"sources":["PageContent.tsx"],"names":["interpolate","Extrapolate","Animated","SCREEN_HEIGHT","Dimensions","get","height","PageContentComponent","animatedFocus","image","title","description","titleStyle","titleStyleOverride","descriptionStyle","descriptionStyleOverride","animatedImageTopPosition","inputRange","outputRange","extrapolate","CLAMP","styles","imageContainerStyle","imageContainer","transform","translateY","PageContent"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;AAEA,MAAM;AAAEA,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAA+BC,8BAArC;;AAEA,MAAMC,aAAa,GAAGC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,MAA/C;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,aAD4B;AAE5BC,EAAAA,KAF4B;AAG5BC,EAAAA,KAH4B;AAI5BC,EAAAA,WAJ4B;AAK5BC,EAAAA,UAAU,EAAEC,kBALgB;AAM5BC,EAAAA,gBAAgB,EAAEC;AANU,CAAD,KAOL;AACtB;AACA,QAAMC,wBAAwB,GAAGhB,WAAW,CAACQ,aAAD,EAAgB;AAC1DS,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD8C;AAE1DC,IAAAA,WAAW,EAAE,CAACf,aAAa,GAAG,CAAjB,EAAoB,CAApB,CAF6C;AAG1DgB,IAAAA,WAAW,EAAElB,WAAW,CAACmB;AAHiC,GAAhB,CAA5C,CAFsB,CAOtB;AAEA;;AACA,QAAMR,UAAU,GAAG,oBAAQ,MAAM,CAACS,eAAOX,KAAR,EAAeG,kBAAf,CAAd,EAAkD,CACnEA,kBADmE,CAAlD,CAAnB;AAIA,QAAMC,gBAAgB,GAAG,oBACvB,MAAM,CAACO,eAAOV,WAAR,EAAqBI,wBAArB,CADiB,EAEvB,CAACA,wBAAD,CAFuB,CAAzB;AAKA,QAAMO,mBAAwB,GAAG,oBAC/B,MAAM,CACJD,eAAOE,cADH,EAEJ;AACEC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,UAAU,EAAET;AAAd,KAAD;AADb,GAFI,CADyB,EAO/B,CAACA,wBAAD,CAP+B,CAAjC,CAnBsB,CA4BtB;;AACA,sBACE,4DACGP,KAAK,iBACJ,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAEa;AAAtB,KACG,OAAOb,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAD3C,CAFJ,eAME,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEG;AAAb,KAA0BF,KAA1B,CANF,eAOE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEI;AAAb,KAAgCH,WAAhC,CAPF,CADF;AAWD,CA/CD;;AAiDA,MAAMe,WAAW,gBAAG,iBAAKnB,oBAAL,CAApB;eAEemB,W","sourcesContent":["import React, { useMemo, memo } from 'react';\nimport { Text, Dimensions } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { PageContentProps } from '../../types';\nimport { styles } from './styles';\n\nconst { interpolate, Extrapolate } = Animated;\n\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\n\nconst PageContentComponent = ({\n  animatedFocus,\n  image,\n  title,\n  description,\n  titleStyle: titleStyleOverride,\n  descriptionStyle: descriptionStyleOverride,\n}: PageContentProps) => {\n  //#region\n  const animatedImageTopPosition = interpolate(animatedFocus, {\n    inputRange: [0, 1],\n    outputRange: [SCREEN_HEIGHT / 8, 0],\n    extrapolate: Extrapolate.CLAMP,\n  });\n  //#endregion\n\n  //#region styles\n  const titleStyle = useMemo(() => [styles.title, titleStyleOverride], [\n    titleStyleOverride,\n  ]);\n\n  const descriptionStyle = useMemo(\n    () => [styles.description, descriptionStyleOverride],\n    [descriptionStyleOverride]\n  );\n\n  const imageContainerStyle: any = useMemo(\n    () => [\n      styles.imageContainer,\n      {\n        transform: [{ translateY: animatedImageTopPosition }],\n      },\n    ],\n    [animatedImageTopPosition]\n  );\n  //#endregion\n  return (\n    <>\n      {image && (\n        <Animated.View style={imageContainerStyle}>\n          {typeof image === 'function' ? image() : image}\n        </Animated.View>\n      )}\n      <Text style={titleStyle}>{title}</Text>\n      <Text style={descriptionStyle}>{description}</Text>\n    </>\n  );\n};\n\nconst PageContent = memo(PageContentComponent);\n\nexport default PageContent;\n"]}